c
token
Doorkeeper::AccessToken
Doorkeeper::AccessToken.find_by(resource_owner_id:params[:id],scopes:"student")
Doorkeeper::AccessToken.find_by(resource_owner_id:2)
Doorkeeper::AccessToken.find_by(resource_owner_id:params[2])
Doorkeeper::AccessToken.find_by(resource_owner_id:params[:id])
params[:id]
:id
id
Doorkeeper::AccessToken.find(resource_owner_id)
Doorkeeper::AccessToken.find_by_id(resource_owner_id)
Doorkeeper::AccessToken
c
check
c
bo=Book.find(reservation.book_id)
book.availablecopy
reservation.book_id
c
reservation.book_id
book.availablecopy
bo=Book.find(reservation.book_id)
c
bo=Book.find(reservation.book_id)
c
bo=Book.find(reservation.book_id)
book.availablecopy
c
bo=Book.find(reservation.book_id)
book.availablecopy
check
c
check
c
check
c
check
c
check
c
check
c
check
Book
c
Borrow.count
n
c
check
c
nc
Borrow.count
n
Borrow.count
n
check.availablecopy
check
c
n
check
n
book
c
b.errors.empty?
b.errors.first.message
b.errors.first.methods.message
b.errors.first.methods
b.errors.first
b.errors.methods
b.errors.full_message(:type)
b.errors.full_message
b.errors
b.errors.details
b.errors.errors
b.errors.errora
b.errors.methods
b.errors
b.errors.
b.errors.full_message
b.errors.last
b.errors
c
borrow
c
true!
n
check
c
check
c
check
n
check
c
check
n
c
check=Book.find(3)
check
FactoryBot.build(:book)
Book
Book.first
Book.last
self.book_id
chf
chf=Book.all
c
c=Book.all
c=Book.find(3)
Book
Book.find(3)
Book.find(30
self.book_id
c
check
c
check
c
current_student
c
current_student
c
Admin.find_for_authentication(email: email)
params
c
self.statusc
current_student
c
params
c
n
self.status
n
self.status
n
self
c
controller
n
controller
n
controller
n
controller
n
controller
n
controller
n
n\
controller
n
controller
n
controller
n
controller
n
controller
n
controller
n
controller
n
controller
n
action
controller
c
:student
student
c
sign_in
sign-in
student
c
self
c
self
c
self
c
self
c
self
book
student
c
book
student
borrow
self
c
\cc
self
c
self
c
self
c
self
c
n
format "render index page"
n
p
formats "render index page"
format "render index page"
formats
format
formats
n
format
n
"render index page"
render index page
formats
n
format
n
c
n
self.index
self
n
index
books/index
index
get :index
c
self
borrow
c
self
c
self
c
self
c
borrow
n
borrow
c
borrow
n
borrow
c
self
c
self
c
self
c
self
c
